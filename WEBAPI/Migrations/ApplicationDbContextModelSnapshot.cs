// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WEBAPI.Data;

namespace WEBAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Area");

                    b.Property<decimal>("CreditLimit");

                    b.Property<string>("Email");

                    b.Property<DateTime?>("EstCardExpiry");

                    b.Property<DateTime?>("LicenseExpiry");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.Property<string>("Telephone");

                    b.HasKey("CompanyID");

                    b.ToTable("mst_company");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CompanyID");

                    b.Property<string>("Email");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("VisaExpiry");

                    b.Property<DateTime?>("WorkPermitExpiry");

                    b.HasKey("EmployeeID");

                    b.HasIndex("CompanyID");

                    b.ToTable("mst_employee");
                });

            modelBuilder.Entity("Models.JobService", b =>
                {
                    b.Property<int>("JobServiceID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("GovtFees");

                    b.Property<int?>("JobServiceHeadID");

                    b.Property<string>("Name");

                    b.HasKey("JobServiceID");

                    b.HasIndex("JobServiceHeadID");

                    b.ToTable("mst_job_service");
                });

            modelBuilder.Entity("Models.JobServiceHead", b =>
                {
                    b.Property<int>("JobServiceHeadID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("JobServiceHeadID");

                    b.ToTable("mst_job_Service_hdr");
                });

            modelBuilder.Entity("Models.PriceMatrix", b =>
                {
                    b.Property<int>("PriceMatrixID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CompanyID");

                    b.Property<int?>("JobServicesID");

                    b.Property<decimal>("Price");

                    b.HasKey("PriceMatrixID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("JobServicesID");

                    b.ToTable("mst_pricematrix");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.HasOne("Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyID");
                });

            modelBuilder.Entity("Models.JobService", b =>
                {
                    b.HasOne("Models.JobServiceHead", "JobServiceHeads")
                        .WithMany("JobServices")
                        .HasForeignKey("JobServiceHeadID");
                });

            modelBuilder.Entity("Models.PriceMatrix", b =>
                {
                    b.HasOne("Models.Company", "Companys")
                        .WithMany("PriceMatrices")
                        .HasForeignKey("CompanyID");

                    b.HasOne("Models.JobService", "JobServices")
                        .WithMany("PriceMatrices")
                        .HasForeignKey("JobServicesID");
                });
#pragma warning restore 612, 618
        }
    }
}
